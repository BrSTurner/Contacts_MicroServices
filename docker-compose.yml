services:
  rabbitmq:
    image: rabbitmq:3-management
    networks: 
      ["my-network"]
    container_name: rabbitmq
    ports:
      [15672:15672]      
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  registration:
    image: ${DOCKER_REGISTRY-}registration-service
    networks: 
      ["my-network"]
    ports:
      [5000:8080,5001:8081]
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: .
      dockerfile: Source/FIAP.Registration.WebAPI/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq   
      - ASPNETCORE_ENVIRONMENT=Development

  termination:
    image: ${DOCKER_REGISTRY-}termination-service
    networks: 
      ["my-network"]
    ports:
      [5002:8080,5003:8081] 
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: .
      dockerfile: Source/FIAP.Termination.WebAPI/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ASPNETCORE_ENVIRONMENT=Development
    
  inquiry:
    image: ${DOCKER_REGISTRY-}inquiry-service
    networks: 
      ["my-network"]
    ports:
      [5004:8080,5005:8081]     
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: .
      dockerfile: Source/FIAP.Inquiry.WebAPI/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ASPNETCORE_ENVIRONMENT=Development
    
  modification:
    image: ${DOCKER_REGISTRY-}modification-service
    networks: 
      ["my-network"]
    ports:
      [5006:8080,5007:8081]   
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: .
      dockerfile: Source/FIAP.Modification.WebAPI/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ASPNETCORE_ENVIRONMENT=Development
      
  database-management:
    image: ${DOCKER_REGISTRY-}database-management-service
    networks: 
      ["my-network"]
    depends_on:
      rabbitmq:
        condition: service_healthy
    build:
      context: .
      dockerfile: Source/FIAP.DatabaseManagement.WS/Dockerfile
    environment:
      - RABBITMQ_HOST=rabbitmq

networks:
  my-network:
    driver: bridge
